# thisbornagain.sh is generated by cmake from thisbornagain.sh.in

# Purpose:
#    set environment variables like LD_LIBRARY_PATH and PYTHONPATH
#    to include the directory the current BornAgain is installed in

# Usage:
#    source <path>/thisbornagain.sh  # under sh, bash, ...
#    source <path>/thisbornagain.csh # under csh

# History:
#    adapted from a CERN Root script by Fons Rademakers, 18/8/2006
#    by the BornAgain team at JCNS/MLZ 2013-

drop_from_path()
{
   # Assert that we got enough arguments
   if test $# -ne 2 ; then
      echo "drop_from_path: needs 2 arguments"
      return 1
   fi

   p=$1
   drop=$2

   newpath=`echo $p | sed -e "s;:${drop}:;:;g" \
                          -e "s;:${drop};;g"   \
                          -e "s;${drop}:;;g"   \
                          -e "s;${drop};;g"`
}

if [ -n "${BORNAGAINSYS}" ] ; then
   old_bornagainsys=${BORNAGAINSYS}
fi

if [ "x${BASH_ARGV[0]}" = "x" ]; then
    if [ ! -f bin/thisbornagain.sh ]; then
        echo ERROR: must "cd where/BornAgain/is" before calling ". bin/thisbornagain.sh" for this version of bash!
        BORNAGAINSYS=; export BORNAGAINSYS
        return 1
    fi
    BORNAGAINSYS="$PWD"; export BORNAGAINSYS
else
    # get param to "."
    thisbornagain=$(dirname ${BASH_ARGV[0]})
    BORNAGAINSYS=$(cd ${thisbornagain}/..;pwd); export BORNAGAINSYS
fi

if [ -n "${old_bornagainsys}" ] ; then
   if [ -n "${PATH}" ]; then
      drop_from_path $PATH ${old_bornagainsys}/bin
      PATH=$newpath
   fi
   if [ -n "${LD_LIBRARY_PATH}" ]; then
      drop_from_path $LD_LIBRARY_PATH ${old_bornagainsys}/lib
      LD_LIBRARY_PATH=$newpath
   fi
   if [ -n "${DYLD_LIBRARY_PATH}" ]; then
      drop_from_path $DYLD_LIBRARY_PATH ${old_bornagainsys}/lib
      DYLD_LIBRARY_PATH=$newpath
   fi
   if [ -n "${SHLIB_PATH}" ]; then
      drop_from_path $SHLIB_PATH ${old_bornagainsys}/lib
      SHLIB_PATH=$newpath
   fi
   if [ -n "${LIBPATH}" ]; then
      drop_from_path $LIBPATH ${old_bornagainsys}/lib
      LIBPATH=$newpath
   fi
   if [ -n "${PYTHONPATH}" ]; then
      drop_from_path $PYTHONPATH ${old_bornagainsys}/lib
      PYTHONPATH=$newpath
   fi
fi


if [ -z "${PATH}" ]; then
   PATH=$BORNAGAINSYS/bin; export PATH
else
   PATH=$BORNAGAINSYS/bin:$PATH; export PATH
fi

if [ -z "${LD_LIBRARY_PATH}" ]; then
   LD_LIBRARY_PATH=$BORNAGAINSYS/lib/BornAgain-1.17; export LD_LIBRARY_PATH       # Linux, ELF HP-UX
else
   LD_LIBRARY_PATH=$BORNAGAINSYS/lib/BornAgain-1.17:$LD_LIBRARY_PATH; export LD_LIBRARY_PATH
fi

if [ -z "${DYLD_LIBRARY_PATH}" ]; then
   DYLD_LIBRARY_PATH=$BORNAGAINSYS/lib/BornAgain-1.17; export DYLD_LIBRARY_PATH   # Mac OS X
else
   DYLD_LIBRARY_PATH=$BORNAGAINSYS/lib/BornAgain-1.17:$DYLD_LIBRARY_PATH; export DYLD_LIBRARY_PATH
fi

if [ -z "${SHLIB_PATH}" ]; then
   SHLIB_PATH=$BORNAGAINSYS/lib/BornAgain-1.17; export SHLIB_PATH                 # legacy HP-UX
else
   SHLIB_PATH=$BORNAGAINSYS/lib/BornAgain-1.17:$SHLIB_PATH; export SHLIB_PATH
fi

if [ -z "${LIBPATH}" ]; then
   LIBPATH=$BORNAGAINSYS/lib/BornAgain-1.17; export LIBPATH                       # AIX
else
   LIBPATH=$BORNAGAINSYS/lib/BornAgain-1.17:$LIBPATH; export LIBPATH
fi

if [ -z "${PYTHONPATH}" ]; then
   PYTHONPATH=$BORNAGAINSYS/lib/BornAgain-1.17; export PYTHONPATH
else
   PYTHONPATH=$BORNAGAINSYS/lib/BornAgain-1.17:$PYTHONPATH; export PYTHONPATH
fi

unset old_bornagainsys
unset thisbornagain
